name: Update from Template

# This workflow keeps the repo up to date with changes from the template repo (REMOTE_URL)
# It duplicates the REMOTE_BRANCH (into UPDATE_BRANCH) and tries to merge it into the 
# this repos default branch (which is checked out here)
# Note that this requires a PAT (Personal Access Token) - at best from a servicing account
# Also note that you should have at least once merged the template repo into the current repo manually
# otherwise a "refusing to merge unrelated histories" error might occur.

on:
  schedule:
    - cron: '55 2 * * 1'
  workflow_dispatch:

env:
  UPDATE_BRANCH: update-from-template
  UPDATE_BRANCH_MERGED: update-from-template-merged
  REMOTE_URL: https://github.com/AB-xdev/template.git
  REMOTE_BRANCH: master

permissions:
  contents: write
  pull-requests: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # Required because otherwise there are always changes detected when executing diff/rev-list
          fetch-depth: 0
          # If no PAT is used the following error occurs on a push:
          # refusing to allow a GitHub App to create or update workflow `.github/workflows/xxx.yml` without `workflows` permission
          token: ${{ secrets.UPDATE_FROM_TEMPLATE_PAT }}
      
      - name: Init Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Main workflow
        id: main
        run: |
          echo "Adding remote template-repo"
          git remote add template ${{ env.REMOTE_URL }}
          
          echo "Fetching remote template repo"
          git fetch template
          
          echo "Deleting local branches that will contain the updates - if present"
          git branch -D ${{ env.UPDATE_BRANCH }} || true
          git branch -D ${{ env.UPDATE_BRANCH_MERGED }} || true
          
          echo "Checking if the remote template repo has new commits"
          git rev-list ..template/${{ env.REMOTE_BRANCH }}

          if [ $(git rev-list --count ..template/${{ env.REMOTE_BRANCH }}) -eq 0 ]; then
            echo "There are no commits new commits on the template repo"
            
            echo "Deleting origin branch(es) that contain the updates - if present"
            git push -f origin --delete ${{ env.UPDATE_BRANCH }} || true
            git push -f origin --delete ${{ env.UPDATE_BRANCH_MERGED }} || true
            
            echo "create_update_branch_pr=false" >> $GITHUB_OUTPUT
            echo "create_update_branch_merged_pr=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "Found new commits on the template repo"
          
          echo "Creating update branch"
          git branch ${{ env.UPDATE_BRANCH }} template/${{ env.REMOTE_BRANCH }}
          git branch --unset-upstream ${{ env.UPDATE_BRANCH }}
          
          echo "Pushing update branch"
          git push -f -u origin ${{ env.UPDATE_BRANCH }}
          
          echo "Getting base branch"
          base_branch=$(git branch --show-current)
          echo "Base branch is $base_branch"
          echo "base_branch=$base_branch" >> $GITHUB_OUTPUT

          echo "Trying to create auto-merged branch ${{ env.UPDATE_BRANCH_MERGED }}"
          git branch ${{ env.UPDATE_BRANCH_MERGED }} ${{ env.UPDATE_BRANCH }}
          git checkout ${{ env.UPDATE_BRANCH_MERGED }}
          
          echo "Merging branch $base_branch into ${{ env.UPDATE_BRANCH_MERGED }}"
          git merge $base_branch && merge_exit_code=$? || merge_exit_code=$?
          if [ $merge_exit_code -ne 0 ]; then
              echo "Auto merge failed! Manual merge required"

              echo "Cleaning up failed merge"
              git merge --abort
              git checkout $base_branch
              git branch -D ${{ env.UPDATE_BRANCH_MERGED }} || true

              echo "Deleting auto-merge branch - if present"
              git push -f origin --delete ${{ env.UPDATE_BRANCH_MERGED }} || true

              echo "create_update_branch_pr=true" >> $GITHUB_OUTPUT
              echo "create_update_branch_merged_pr=false" >> $GITHUB_OUTPUT
              exit 0
          fi

          echo "Pushing auto-merged branch"
          git push -f -u origin ${{ env.UPDATE_BRANCH_MERGED }}

          echo "create_update_branch_pr=false" >> $GITHUB_OUTPUT
          echo "create_update_branch_merged_pr=true" >> $GITHUB_OUTPUT
          
      - name: pull-request update_branch
        if: steps.main.outputs.create_update_branch_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh_pr_up() { 
            gh pr create -H "${{ env.UPDATE_BRANCH }}" "$@" || (git checkout "${{ env.UPDATE_BRANCH }}" && gh pr edit "$@")
          }
          gh_pr_up -B "${{ steps.main.outputs.base_branch }}" \
            --title "Update from template" \
            --body "An automated PR to sync changes from the template into this repo"

      - name: pull-request update_branch_merged
        if: steps.main.outputs.create_update_branch_merged_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh_pr_up() { 
            gh pr create -H "${{ env.UPDATE_BRANCH_MERGED }}" "$@" || (git checkout "${{ env.UPDATE_BRANCH_MERGED }}" && gh pr edit "$@")
          }
          gh_pr_up -B "${{ steps.main.outputs.base_branch }}" \
            --title "Update from template (auto-merged)" \
            --body "An automated PR to sync changes from the template into this repo"
